{
  "id": "entasis",
  "title": "Entasis",
  "content": "\r\n## 1.소개\r\n\r\n- 프로젝트 명 : ENTASIS]\r\n- Github 링크 : [GitHub - codestates-beb/BEB-07-final-entasis](https://github.com/codestates-beb/BEB-07-final-entasis)\r\n- 블록체인 네트워크 주소 : [http://18.183.252.200:8545](http://18.183.252.200:8545/) 체인ID : 1337\r\n\r\n### 윤수빈\r\n\r\n- 포지션 : PM / Full Stack / Design\r\n- 개인 깃허브 : https://github.com/Russ481-k\r\n- 활용 스택 : Figma / Javascript / React/ HTML / CSS / MySQL / Sequelize / Node.js / Scale-Liner / Axios\r\n- 구현 기능 :\r\n  - 프로젝트 기획&관리\r\n  - 디자인 구상 및 구현\r\n  - 프론트엔드 UI, UX 구현\r\n  - 차트 구현\r\n  - 서버 제공 API를 통한 데이터 요청\r\n  - 서버 실시간 데이터 생성 기능 구현\r\n\r\n## 2. 프로젝트 소개\r\n\r\n[ STO 거래소 “ENTASIS” ]\r\n![거래](/images/entasis/entasis_trade.gif)\r\n\r\n투자자의 입장에서 STO가 무엇이고, 어떤 기능이 있으며, 어떻게 투자할 수 있는지를\r\n이 프로젝트를 통해 이해하도록 도움으로써 증권형 토큰에 대한 투자를 확대시키는 것이\r\n이 프로젝트의 목표다.\r\n\r\n[래리핑크 인터뷰](https://www.youtube.com/watch?v=0fmODCTVs0g)\r\n\r\n글로벌 자산운용사 블랙록의 대표 래리핑크는 2022. 12. 1. 인터뷰에서\r\nSTO를 통해 현재 증권 거래 비용에 포함된 브로커들의 수수료를 매매 당사자들에게 나누어주며\r\n수수료가 낮아질 것이고 투표 또한 ST 소유자들이 할 수 있게 될 것이라고 말했다.\r\n\r\n래리핑크의 STO에 대한 인식은 프로젝트 주제 선정에 결정에 도움을 주었다.\r\n\r\n[STO 설명 영상](https://www.youtube.com/watch?v=PSVpth7uqb4&t=650s)\r\n\r\n우리가 흔히 알고 있는 토큰은 ICO를 기반한 '유틸리티 토큰' 이다.\r\n\r\n그렇다면 STO란 무엇일까?\r\n\r\n![STO 설명](/images/entasis/entasis_sto.png)\r\n\r\n우선 STO의 기반이 되는 “증권형 토큰(Secturity Token)”이 무엇인지에 대해 이해할 필요가 있다.\r\n\r\n증권형 토큰(일명 ST)은 기업이 주식, 채권 대신 암호화폐 형태로 발행하는 유가 증권이다.\r\n이 증권형 토큰은 블록체인 플랫폼이 제공하는 서비스를 활용할 권리 대신 주식과 마찬가지로\r\n기업의 법적 소유권을 가졌음을 의미한다.\r\n\r\n때문에 증권형 토큰을 보유하고 있으면 기업 또는 기업의 블록체인 플랫폼이 낸 수익이나\r\n자산의 일부를 배당받을 수 있다.\r\n\r\n증권형 토큰은 그 용도가 주식, 채권 등 유가증권과 동일하기 때문에 법과 정책의 개입과 규제를 받아야만 한다.\r\n상법에 정해진 절차에 따라 주식을 발행하듯 관련 법에 따라 증권형 토큰을 발행해야 한다는 것이다.\r\n\r\n이 증권형 토큰을 IPO와 같이 상장하여 거래가 이루어지도록 하는 것이 STO 라고 할 수 있다.\r\n\r\n![STO 설명 2](/images/entasis/entasis_sto2.png)\r\n\r\n[ About Service ]\r\nEntasis는 실제 STO 거래소의 기능을 일부 축소하여 상대적으로 기업보다 STO에 대해 접근을 어려워 할 개인 투자자들에게 실제 ST에 투자를 해봄으로써 증권형 토큰에 대해서 더 쉽게 이해하고 접근할 수 있도록 도와주는 “STO 거래소 튜토리얼” 이다.\r\n\r\n## 3.기본 환경 조성\r\n\r\n### 토큰 가격 형성 및 변동성\r\n\r\n실제 거래소에서 Market Maker & Market Taker 와 토큰 매매를 통해 가격이 형성이 되지만,\r\n이 프로젝트를 진행하는데 있어서 튜토리얼이라는 점과 대규모의 트래픽이 기대되지 않는다는 점으로 인해\r\n실제 거래소에서 가격 형성이 되는 방식으로 구현하는 것은 제한된다고 판단하였다.\r\n\r\n그에 따라 난수를 통해 가격을 형성하고 주기적으로 가격이 변동할 수 있도록 구현하였다.\r\n단기 변동성과 중장기 변동성, 기업의 당기순이익 발표의 값이 난수로 설정되어 각각 3 개의 ST시장을 형성했다.\r\n또한 당기순이익에 배당률을 적용하여 기업의 이익을 지분에 따라 배당한다.\r\n토큰 소유자는 지분율에 따라 투표를 할 수 있다.\r\n\r\n### 블록체인\r\n\r\n이더리움 : EC2 인스턴스에서 백그라운드로 가나슈 네트워크를 실행시켰으며, 트러플을 이용하여 컨트랙트를 배포하였다.\r\n근본적으로 토큰 거래 기능을 위해 ERC20을 사용하였으며, 증권형 토큰의 기능 일부를 추가하기 위해 ERC1400의 운영자 및 제어자 변수와 거래제한 함수를 발췌하였다.\r\n투자자 입장에서 다양한 토큰에 대해서 분석하고 거래를 할 필요가 있다고 판단하여 3개의 기업으로 다양화하여 3개의 컨트랙트를 배포하였으며, 토큰 거래가 이루어질 때마다 해당 토큰 보유자 배열에 저장하여 배당금을 분배할 때 토큰 보유 여부를 확인할 수 있도록 하였다.\r\n스테이킹시 토큰 매매 제한을 강제하기 위해서 스테이킹의 모든 기능은 컨트랙트 내에서 구현하였으며, 만료일을 계산하는 데에는 block.timestamp 를 이용하여 만료 여부를 확인할 수 있도록 하였다.\r\n\r\n## 4.프로젝트 기록\r\n\r\nProject Entasis를 4F 방식으로 기록하고자 한다.\r\n\r\n- 사실(Fact) : 프로젝트를 통해 어떤 내용을 고민했고 어떤 방법으로 개념을 이해하고 문제를 해결했는지 작성\r\n- 감정(Feeling) : 프로젝트를 진행하면서 느꼈던 감정을 솔직하게 기록발견\r\n- (Finding) : 문제를 해결하면서 무엇을 깨달았고, 시도해본 해결 방법에 대해서 개선이 필요한 부분을 발견했다면 발견 항목에 기록다음주를 위한 행동\r\n- (Future Action) : 위의 회고를 통해서 당장 다음 프로젝트에 적용해 볼 학습 방법이나 조금 더 고민이 필요한 내용, 커뮤니케이션 방식 등을 기록\r\n\r\n### Fact\r\n\r\n주요 기능\r\n\r\n- **1초마다 실시간으로 가격 변동이 일어나는 차트 중심의 한 메인 페이지**\r\n  - 차트는 1분 15분 1시간 4시간 1일 1주 단위로 캔들 단위를 조정하여 볼 수 있도록 한다.\r\n  - 차트에 포커스 된 경우, 스크롤 값은 캔들의 넓이에 값을 주어 페이지 높이가 아닌 차트 범위를 조정할 수 있도록 한다.\r\n  - 차트에 포커스 된 경우, 십자 좌표를 표시하며, 시세와 거래량 각각의 영역에 포인트 값에 따라 우측에 해당 높이에 대한 값을 출력한다.\r\n  -\r\n- **메타 마스크를 통한 지갑 등록**\r\n\r\n![메타마스크 연동](/images/entasis/entasis_metamask.png)\r\n\r\n- WEB3.0을 지향하여 지갑을 위주로 유저의 상태를 관리한다.\r\n- 회원가입을 따로 진행할 필요가 없으며, 메타마스크로 지갑등록을 하면 자동으로 로그인한다.\r\n- 메타마스크가 설치되어있지 않은 경우 메타마스크 설치 링크로 유도한다.\r\n- 처음 로그인을 하는 메타마스크 지갑인 경우 DB에 등록한다.\r\n\r\n- **튜토리얼 및 이용법 설명**\r\n  ![튜토리얼](/images/entasis/entasis_tutorial.gif)\r\n\r\n  - CSS의 transition을 활용하여 모달을 이동하며 서비스의 전체적인 이용방법을 사용자에게 전달한다.\r\n  - 실제 매매를 일으키며 유저에게 거래 경험을 제공하려 하였으나 손익에 대한 경험을 강제적으로 실행하는 것이 바람직하지 않다고 여겨 모달 프로세스 형태로 튜토리얼을 구현한다.\r\n\r\n- **FAUCET : 초기 자본금 50ETH 부여**\r\n\r\n![튜토리얼 과정](/images/entasis/entasis_tutorial.gif)\r\n\r\n![파우셋](/images/entasis/entasis_faucet.png)\r\n\r\n- 튜토리얼을 완료하면 자동으로 faucet 기능을 통해 50ETH가 부여한다.\r\n- faucet은 1회로 제한한다.\r\n\r\n- **ETH를 통한 증권형 토큰 구매 및 판매**\r\n\r\n![거래 수수료](/images/entasis/entasis_sign.png)\r\n\r\n- 실시간으로 변하는 가격을 보고 토큰을 구매 및 판매할 수 있다.\r\n- 투자자가 토큰 거래를 할 경우 메타마스크를 통해 서명한다.\r\n\r\n![거래 수수료](/images/entasis/entasis_fee.png)\r\n\r\n- 거래 수수료는 거래대금의 0.04%로 자동으로 계산한다.\r\n\r\n- **배당금 투표**\r\n\r\n![투표](/images/entasis/entasis_vote.gif)\r\n\r\n- 10분에 한 번씩 지급되는 배당금에 대한 배당률을 결정하기 위해 배당률 투표를 진행한다.\r\n- 투표를 하지 않더라도 배당금을 지급 받는다.\r\n\r\n- **배당금 지급**\r\n  ![배당금](/images/entasis/entasis_dividend.gif)\r\n  - 토큰 별로 totalSupply 대비 투자자가 보유하고 있는 토큰양에 따라 배당금이 지불한다.\r\n\r\n[배당금 지급 전 거래내역]\r\n![거래 내역](/images/entasis/entasis_trade.gif)\r\n\r\n[배당금 지급 후 거래내역]\r\n![거래 후 내역](/images/entasis/entasis_after_trade.png)\r\n\r\n웹사이트 상단 로고 아래에 있는 배당금 지급 시간이 모두 지나면 자동으로 배당금이 지급되며, 그 내역이 History에 표시된다.\r\n\r\n- **거래제한(Circuit Breaker)**\r\n\r\n![서킷 브레이커](/images/entasis/entasis_circuit_breaker.png)\r\n\r\n- 극단적인 가격 변동률이 발생할 경우 모든 토큰에 거래를 제한한다.\r\n- 1분간 거래가 불가능해지며 이에 따라 토큰 가격도 1분간 정지된다.\r\n- 본 프로젝트에서는 극단적인 가격 변동이 일어날 일이 없는 점으로 인해\r\n  거래 제한 기능을 보여주기 위하여 Circuit Breaker 버튼을 누를 경우 거래 제한이 발동하도록 구현한다.\r\n  [거래 제한 발동]\r\n  ![서킷 브레이커 발동](/images/entasis/entasis_circuit.gif)\r\n\r\n  [거래 제한 해제]\r\n  ![서킷 브레이커 해제](/images/entasis/entasis_circuit_end.gif)\r\n\r\n- **스테이킹 기능(Staking)**\r\n  ![스테이킹](/images/entasis/entasis_staking.png)\r\n  - 스테이킹은 본인이 보유하고 있는 디지털자산을 블록체인 네트워크에 맡기는 방식으로 현금을 은행에 맡기는 예금과 구조가 유사하다.\r\n  - 보유한 디지털 자산을 블록체인 검증에 활용하도록 맡기는 것을 뜻한다.\r\n  - 스테이킹을 할 경우 일정기간동안 토큰을 거래소에 맡기고 기간이 만료되면 상대적으로 높은 이율에 따른 보상과 함께 토큰을 돌려받게 된다.\r\n  - 단, 스테이킹 기간동안에는 해당 토큰을 사용할 수 없기 때문에, 토큰 가격이 변동으로 인해 토큰을 돌려 받고 싶어도 해당 기간동안에는 돌려 받을 수 없다.\r\n    [스테이킹 요청시]\r\n    ![스테이킹 화면 1](/images/entasis/entasis_staking_1.png)\r\n  - 사용자는 Staking 버튼을 눌러 메타마스크를 통해 서명한 데이터를 원하는 ST 컨트랙트에 보내 스테이킹을 진행한다.\r\n  - 이 때, 이미 스테이킹이 되어있거나 기입한 Amount(수량)보다 토큰 보유량이 적을 시 에러를 반환한다.\r\n  - 토큰이 문제없이 스테이킹이 된다면 우측 Amount List와 Reward List가 갱신되고 하단 Reward Time에 보상 인출까지 남은 기간이 표시한다.\r\n    [보상 인출시]\r\n    ![스테이킹 화면 2](/images/entasis/entasis_staking_2.png)\r\n  - Reward Time이 Able로 변경되어 보상 인출이 가능해지면, 사용자는 Reward 버튼을 눌러 보상 인출 함수를 실행하는 데이터를 메타마스크로 서명해 컨트랙트에 보낸다.\r\n  - 컨트랙트에서 만료일을 확인한 후, 문제가 없다면 사용자에게 스테이킹한 Amount에 Reward를 합한 토큰을 사용자에게 전송한다.\r\n    - 만료일이 지나지 않았을 경우 Reward 버튼이 비활성화\r\n  - 토큰과 보상이 사용자에게 전송되면 다시 Amount List와 Reward List가 0으로 초기화한다.\r\n\r\n# [ A**bout Dev ]\\*\\*\r\n\r\n## **기술 스택**\r\n\r\n![기술 스택](/images/entasis/entasis_tech_stack.png)\r\n\r\n## 와이어프레임\r\n\r\nhttps://www.figma.com/embed?embed_host=notion&url=https%3A%2F%2Fwww.figma.com%2Ffile%2FHP5FZix2FedecrcLWhUsb7%2FProject_Entasis%3Fnode-id%3D0%253A1%26t%3DL4XWojmyo6BCQvJK-1\r\n\r\n## 플로우 차트\r\n\r\n- **Chart Data Flow**\r\n\r\nhttps://www.figma.com/embed?embed_host=notion&url=https%3A%2F%2Fwww.figma.com%2Ffile%2FjC6wwRAyBiQJ8Y0nB6iyiH%2FUntitled%3Fnode-id%3D0%253A1%26t%3DrlPZeEHfPYzyxIO4-1\r\n\r\n## 아키텍처\r\n\r\n![아키텍처](/images/entasis/entasis_arch.png)\r\n\r\n아키텍처의 경우 S3를 이용한 정적 호스트 페이지와 EC2를 이용한 서비스 서버, Database 클라우드 서버, 그리고 블록체인 네트워크 서버로 구성되어 있다.\r\n\r\n- 먼저 배포과정에서는 Github Actions 를 활용하여 CI/CD 파이프라인을 구성하여 Github에서 push가 발생할 때마다 배포중인 서비스에 반영되어 자동 배포가 실행된다.\r\n- 클라이언트는 AWS IAM를 통해 S3에 접근하여 배포하였으며, 블록체인 네트워크의 경우 AWS EC2의 인스턴스 내에서 가나슈 네트워크를 백그라운드로 실행하여 네트워크가 지속 가능하도록 설정하였다.\r\n- 서버 부분은 EC2를 이용하여 Docker와 Github Container Registry를 사용하여 EC2내에서 백그라운드로 자동서비스를 실행할 수 있도록 설계하였다.\r\n\r\n## **데이터베이스 스키마 다이어그램**\r\n\r\n![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/7a81b8d5-5578-4f17-9037-10eedb81a23a/Untitled.png)\r\n\r\n## API 문서\r\n\r\n[API 문서](https://www.notion.so/API-feb98146eeb4481193df2505f966b9c6?pvs=21)\r\n\r\n## 스마트 컨트랙트 및 토큰 이코노미 설계\r\n\r\n[스마트 컨트랙트 설계](https://www.notion.so/ebe74ce3e9af4b7db5edf7ae39c7728e?pvs=21)\r\n\r\n## Feeling\r\n\r\n4주간의 시간동안 변동성과 시장의 형태를 구현할 수 있어서 의미있는 시간이었다. 시장의 형태를 구현하여 팀원들이 각자 수익률을 공유하며 자산을 늘려가는 즐거움을 공유했던 것이 가장 기억에 남는다.\r\n\r\nNFT와 선물 옵션 등 파생상품 시장 또한 다루어 보고 싶었지만, 시간이 넉넉하지 않았던 것에 아쉬움이 남았다\r\n\r\n스스로 서비스를 구현할수 있다는 것을 알게 되었고. 그것을 위해 내게 필요한 기술이 무엇인지 또한 알 수 있었던 소중한 시간이었다.\r\n\r\n## Finding\r\n\r\n1. 최소 단위기간에 1인이 감당할 수 있는 작업량에 대해 명확한 기준이 없이 무리하게 기능을 추가하여 4주라는 시간 대비 과한 범위를 적용하였고 그 범위를 재설정하는 것에 적지 않은 시간이 소요되었다.\r\n2. 차트 이외에 트렌젝션 데이터와 유저 수익률 및 트랜잭션 데이터를 검색엔진에 노출되기 어려운 CSR형태로 구현하였다.\r\n3. 상태관리 라이브러리를 활용하지 못하여 실시간 가격(currentPrice)이 자식 컴포넌트로 깊게 내려가는 props drilling 현상이 발생했다.\r\n4. 잘못된 접근을 알리는 404페이지를 구현하였으나, 지갑이 등록 되었을 경우에만 접근할 수 있는 페이지로 구분하지 못했다.\r\n5. 서버와의 통신을 HTTP요청을 통해 구현하여 대규모 트래픽에 대비하지 못했다.\r\n\r\n## Future Action\r\n\r\n1. 프로젝트를 진행함에 따라 그 기간을 어떻게 설정해야 적절한지 알 수 있었고 그것을 측정하는 것 또한 프로젝트의 중요한 부분이라는 점을 알 수 있었다. 프로젝트 초기부터 CPM을 설정하여 진행상황 평가를 공유하며 작업 진도에 대한 합의를 하는 것이 필요하다는 것을 알 수 있었다.\r\n2. NEXTJS를 통해 SSR을 구현, SEO를 실현할 수 있는, 사용자들에게 노출될 수 있는 웹 서비스로 구현해야겠다.\r\n3. 효율적인 컴포넌트 구조를 찾기 위해 Redux, Mobx, Recoil 등의 상태관리 라이브러리와 리액트의 컴포지션, 컨택스트, 포탈을 사용을 고려하여 데이터 흐름 최적화에 대한 고민을 해야겠다.\r\n4. 지갑의 등록되었을 경우에만 볼 수 있는 버튼을 구현함으로 유저데이터를 안전하게 관리하는 접근 영역이 명료한 웹 서비스로 리팩토링해야겠다.\r\n5. 데이터 처리에 대한 피드백 받은 내용을 토대로 실시간 데이터 연동 웹소켓을 적용해야겠다.\r\n\r\n## **기술적 문제 해결**\r\n\r\n- **랜더링 최적화**에 문제가 있었다. **프로젝트 종료 3일 전**에 거래 토큰 다양화 과정에서 실시간 차트 **데이터 요청이 기하급수로 늘어나는 것**을 보았다. **웹은 시간이 갈수록 무거워졌고 DB의 용량이 무한히 커졌으며 체인 네트워크는 수 시간 만에 8G의 용량을 소진해 버렸다.** 같은 내용을 랜더링 하지 않는 **useMemo**나 랜더링을 최소화하기 위해 상태를 전역으로 관리하는 **Redux** 사용을 고려 하였으나, 우선 기존의 작성되었던 모든 **useEffect의 디펜던시**를 확인 해 보았다. 차트 데이터, 실시간 데이터, 실시간 데이터들의 일정시간 경과 후 차트 배열에 축적 시키는 과정에서 useEffect의 디펜던시에 해당 **요소 값**이 전부 들어가 있었다. 즉 **차트에 포함되는 함수와 배열이 변경될 때 마다 관련된 모든 컴포넌트에서 리랜더링이 일어났던 것**이다. 해당 디펜던시에 난수 적용 **단위 기간과 같은 간격으로 비동기 처리**를 할 수 있도록 했더니 기하급수 리랜더링 문제는 해결되었다.\r\n- **캔들 차트**에서 **스크롤 이벤트**에 대한 이해 없이 작업을 진행하다 보니, 차트를 제외한 페이지와의 **스크롤 값 충돌** 문제와 **마우스 포인터의 값**을 구하는 작업에 어려움을 느꼈다. 입력되는 스크롤 값에 대해 차트 컴포넌트와 메인페이지와의 입력 값의 구분이 필요했고 **스크롤을 제한하고 제한을 푸는 작업**이 필요하다 생각했다. 해당 키워드로 검색해보니, **document.body.style.overflow의 값을 unset과 hidden으로 독립**시킬 수 있다는 것을 알게 되었고, 메인페이지에서 스크롤을 할 때마다 차트에 영향을 주는 문제를 해결했다.\r\n- **SVG**를 통해 차트의 가격 높이 값과 거래량 높이 값을 설정해 준 후 **마우스 포인터의 위치에 비례한 값**을 보여주는 것에서 어려움이 있었다. 분명 해당 가격의 소수점 둘째 자리까지 **정확히** 맞아 떨어지는 것을 확인했는데, 며칠 뒤에 그 값이 **음수**로 바뀌어 있었다. 당혹스러웠지만 다시 살펴 보았다. 차트의 위치 값은 위로 **올라갈수록** 커지지만 마우스의 위치 값은 **아래로 내려올수록** 커진다는 것에서 값이 반전되거나 음수를 출력하는 문제가 발생한 것이었다. **방정식**으로 정확한 값을 구할 수 있었으나 잘못된 식을 대입했었고 **차트와 거래량 간의 값 차이**를 생각하지 않고 동일한 요소 값을 설정 했던 것에서 문제가 발생했음을 깨닫고 **캔들은 최댓값과 최솟값**이 달라질 수 있지만 **거래량은 최솟값이 0으로 고정**인 것을 이해하여 오류를 해결했다.\r\n\r\n### 프로젝트를 마치며\r\n\r\nNEXTjs를 통해 SSR을 구현하여 SEO를 구현하기를 바란다.\r\n\r\n서버의 차트데이터 로직 구현 외 백엔드와 컨트랙트 부분에 역할을 맡지 못한 점 또한 추후 솔로 프로젝트로 구현해야겠다.\r\n",
  "date": "2024-03-20",
  "category": "projects",
  "tags": [
    "React",
    "Express",
    "MySQL",
    "Web3.js",
    "AWS",
    "Ganache",
    "Truffle",
    "ERC20",
    "MetaMask",
    "Figma"
  ],
  "thumbnail": "/images/entasis/entasis_circuit.gif",
  "translations": {
    "ko": {
      "title": "Entasis",
      "description": "가상자산 거래소 개발",
      "content": "<h2 id=\"heading-0\">1.소개</h2>\n<ul>\n<li>프로젝트 명 : ENTASIS]</li>\n<li>Github 링크 : <a href=\"https://github.com/codestates-beb/BEB-07-final-entasis\">GitHub - codestates-beb/BEB-07-final-entasis</a></li>\n<li>블록체인 네트워크 주소 : <a href=\"http://18.183.252.200:8545/\">http://18.183.252.200:8545</a> 체인ID : 1337</li>\n</ul>\n<h3 id=\"heading-1\">윤수빈</h3>\n<ul>\n<li>포지션 : PM / Full Stack / Design</li>\n<li>개인 깃허브 : <a href=\"https://github.com/Russ481-k\">https://github.com/Russ481-k</a></li>\n<li>활용 스택 : Figma / Javascript / React/ HTML / CSS / MySQL / Sequelize / Node.js / Scale-Liner / Axios</li>\n<li>구현 기능 :\n<ul>\n<li>프로젝트 기획&amp;관리</li>\n<li>디자인 구상 및 구현</li>\n<li>프론트엔드 UI, UX 구현</li>\n<li>차트 구현</li>\n<li>서버 제공 API를 통한 데이터 요청</li>\n<li>서버 실시간 데이터 생성 기능 구현</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"heading-2\">2. 프로젝트 소개</h2>\n<p>[ STO 거래소 “ENTASIS” ]\n<img src=\"/images/entasis/entasis_trade.gif\" alt=\"거래\"></p>\n<p>투자자의 입장에서 STO가 무엇이고, 어떤 기능이 있으며, 어떻게 투자할 수 있는지를\n이 프로젝트를 통해 이해하도록 도움으로써 증권형 토큰에 대한 투자를 확대시키는 것이\n이 프로젝트의 목표다.</p>\n<p><a href=\"https://www.youtube.com/watch?v=0fmODCTVs0g\">래리핑크 인터뷰</a></p>\n<p>글로벌 자산운용사 블랙록의 대표 래리핑크는 2022. 12. 1. 인터뷰에서\nSTO를 통해 현재 증권 거래 비용에 포함된 브로커들의 수수료를 매매 당사자들에게 나누어주며\n수수료가 낮아질 것이고 투표 또한 ST 소유자들이 할 수 있게 될 것이라고 말했다.</p>\n<p>래리핑크의 STO에 대한 인식은 프로젝트 주제 선정에 결정에 도움을 주었다.</p>\n<p><a href=\"https://www.youtube.com/watch?v=PSVpth7uqb4&amp;t=650s\">STO 설명 영상</a></p>\n<p>우리가 흔히 알고 있는 토큰은 ICO를 기반한 '유틸리티 토큰' 이다.</p>\n<p>그렇다면 STO란 무엇일까?</p>\n<p><img src=\"/images/entasis/entasis_sto.png\" alt=\"STO 설명\"></p>\n<p>우선 STO의 기반이 되는 “증권형 토큰(Secturity Token)”이 무엇인지에 대해 이해할 필요가 있다.</p>\n<p>증권형 토큰(일명 ST)은 기업이 주식, 채권 대신 암호화폐 형태로 발행하는 유가 증권이다.\n이 증권형 토큰은 블록체인 플랫폼이 제공하는 서비스를 활용할 권리 대신 주식과 마찬가지로\n기업의 법적 소유권을 가졌음을 의미한다.</p>\n<p>때문에 증권형 토큰을 보유하고 있으면 기업 또는 기업의 블록체인 플랫폼이 낸 수익이나\n자산의 일부를 배당받을 수 있다.</p>\n<p>증권형 토큰은 그 용도가 주식, 채권 등 유가증권과 동일하기 때문에 법과 정책의 개입과 규제를 받아야만 한다.\n상법에 정해진 절차에 따라 주식을 발행하듯 관련 법에 따라 증권형 토큰을 발행해야 한다는 것이다.</p>\n<p>이 증권형 토큰을 IPO와 같이 상장하여 거래가 이루어지도록 하는 것이 STO 라고 할 수 있다.</p>\n<p><img src=\"/images/entasis/entasis_sto2.png\" alt=\"STO 설명 2\"></p>\n<p>[ About Service ]\nEntasis는 실제 STO 거래소의 기능을 일부 축소하여 상대적으로 기업보다 STO에 대해 접근을 어려워 할 개인 투자자들에게 실제 ST에 투자를 해봄으로써 증권형 토큰에 대해서 더 쉽게 이해하고 접근할 수 있도록 도와주는 “STO 거래소 튜토리얼” 이다.</p>\n<h2 id=\"heading-3\">3.기본 환경 조성</h2>\n<h3 id=\"heading-4\">토큰 가격 형성 및 변동성</h3>\n<p>실제 거래소에서 Market Maker &amp; Market Taker 와 토큰 매매를 통해 가격이 형성이 되지만,\n이 프로젝트를 진행하는데 있어서 튜토리얼이라는 점과 대규모의 트래픽이 기대되지 않는다는 점으로 인해\n실제 거래소에서 가격 형성이 되는 방식으로 구현하는 것은 제한된다고 판단하였다.</p>\n<p>그에 따라 난수를 통해 가격을 형성하고 주기적으로 가격이 변동할 수 있도록 구현하였다.\n단기 변동성과 중장기 변동성, 기업의 당기순이익 발표의 값이 난수로 설정되어 각각 3 개의 ST시장을 형성했다.\n또한 당기순이익에 배당률을 적용하여 기업의 이익을 지분에 따라 배당한다.\n토큰 소유자는 지분율에 따라 투표를 할 수 있다.</p>\n<h3 id=\"heading-5\">블록체인</h3>\n<p>이더리움 : EC2 인스턴스에서 백그라운드로 가나슈 네트워크를 실행시켰으며, 트러플을 이용하여 컨트랙트를 배포하였다.\n근본적으로 토큰 거래 기능을 위해 ERC20을 사용하였으며, 증권형 토큰의 기능 일부를 추가하기 위해 ERC1400의 운영자 및 제어자 변수와 거래제한 함수를 발췌하였다.\n투자자 입장에서 다양한 토큰에 대해서 분석하고 거래를 할 필요가 있다고 판단하여 3개의 기업으로 다양화하여 3개의 컨트랙트를 배포하였으며, 토큰 거래가 이루어질 때마다 해당 토큰 보유자 배열에 저장하여 배당금을 분배할 때 토큰 보유 여부를 확인할 수 있도록 하였다.\n스테이킹시 토큰 매매 제한을 강제하기 위해서 스테이킹의 모든 기능은 컨트랙트 내에서 구현하였으며, 만료일을 계산하는 데에는 block.timestamp 를 이용하여 만료 여부를 확인할 수 있도록 하였다.</p>\n<h2 id=\"heading-6\">4.프로젝트 기록</h2>\n<p>Project Entasis를 4F 방식으로 기록하고자 한다.</p>\n<ul>\n<li>사실(Fact) : 프로젝트를 통해 어떤 내용을 고민했고 어떤 방법으로 개념을 이해하고 문제를 해결했는지 작성</li>\n<li>감정(Feeling) : 프로젝트를 진행하면서 느꼈던 감정을 솔직하게 기록발견</li>\n<li>(Finding) : 문제를 해결하면서 무엇을 깨달았고, 시도해본 해결 방법에 대해서 개선이 필요한 부분을 발견했다면 발견 항목에 기록다음주를 위한 행동</li>\n<li>(Future Action) : 위의 회고를 통해서 당장 다음 프로젝트에 적용해 볼 학습 방법이나 조금 더 고민이 필요한 내용, 커뮤니케이션 방식 등을 기록</li>\n</ul>\n<h3 id=\"heading-7\">Fact</h3>\n<p>주요 기능</p>\n<ul>\n<li><strong>1초마다 실시간으로 가격 변동이 일어나는 차트 중심의 한 메인 페이지</strong>\n<ul>\n<li>차트는 1분 15분 1시간 4시간 1일 1주 단위로 캔들 단위를 조정하여 볼 수 있도록 한다.</li>\n<li>차트에 포커스 된 경우, 스크롤 값은 캔들의 넓이에 값을 주어 페이지 높이가 아닌 차트 범위를 조정할 수 있도록 한다.</li>\n<li>차트에 포커스 된 경우, 십자 좌표를 표시하며, 시세와 거래량 각각의 영역에 포인트 값에 따라 우측에 해당 높이에 대한 값을 출력한다.</li>\n<li></li>\n</ul>\n</li>\n<li><strong>메타 마스크를 통한 지갑 등록</strong></li>\n</ul>\n<p><img src=\"/images/entasis/entasis_metamask.png\" alt=\"메타마스크 연동\"></p>\n<ul>\n<li>\n<p>WEB3.0을 지향하여 지갑을 위주로 유저의 상태를 관리한다.</p>\n</li>\n<li>\n<p>회원가입을 따로 진행할 필요가 없으며, 메타마스크로 지갑등록을 하면 자동으로 로그인한다.</p>\n</li>\n<li>\n<p>메타마스크가 설치되어있지 않은 경우 메타마스크 설치 링크로 유도한다.</p>\n</li>\n<li>\n<p>처음 로그인을 하는 메타마스크 지갑인 경우 DB에 등록한다.</p>\n</li>\n<li>\n<p><strong>튜토리얼 및 이용법 설명</strong>\n<img src=\"/images/entasis/entasis_tutorial.gif\" alt=\"튜토리얼\"></p>\n<ul>\n<li>CSS의 transition을 활용하여 모달을 이동하며 서비스의 전체적인 이용방법을 사용자에게 전달한다.</li>\n<li>실제 매매를 일으키며 유저에게 거래 경험을 제공하려 하였으나 손익에 대한 경험을 강제적으로 실행하는 것이 바람직하지 않다고 여겨 모달 프로세스 형태로 튜토리얼을 구현한다.</li>\n</ul>\n</li>\n<li>\n<p><strong>FAUCET : 초기 자본금 50ETH 부여</strong></p>\n</li>\n</ul>\n<p><img src=\"/images/entasis/entasis_tutorial.gif\" alt=\"튜토리얼 과정\"></p>\n<p><img src=\"/images/entasis/entasis_faucet.png\" alt=\"파우셋\"></p>\n<ul>\n<li>\n<p>튜토리얼을 완료하면 자동으로 faucet 기능을 통해 50ETH가 부여한다.</p>\n</li>\n<li>\n<p>faucet은 1회로 제한한다.</p>\n</li>\n<li>\n<p><strong>ETH를 통한 증권형 토큰 구매 및 판매</strong></p>\n</li>\n</ul>\n<p><img src=\"/images/entasis/entasis_sign.png\" alt=\"거래 수수료\"></p>\n<ul>\n<li>실시간으로 변하는 가격을 보고 토큰을 구매 및 판매할 수 있다.</li>\n<li>투자자가 토큰 거래를 할 경우 메타마스크를 통해 서명한다.</li>\n</ul>\n<p><img src=\"/images/entasis/entasis_fee.png\" alt=\"거래 수수료\"></p>\n<ul>\n<li>\n<p>거래 수수료는 거래대금의 0.04%로 자동으로 계산한다.</p>\n</li>\n<li>\n<p><strong>배당금 투표</strong></p>\n</li>\n</ul>\n<p><img src=\"/images/entasis/entasis_vote.gif\" alt=\"투표\"></p>\n<ul>\n<li>\n<p>10분에 한 번씩 지급되는 배당금에 대한 배당률을 결정하기 위해 배당률 투표를 진행한다.</p>\n</li>\n<li>\n<p>투표를 하지 않더라도 배당금을 지급 받는다.</p>\n</li>\n<li>\n<p><strong>배당금 지급</strong>\n<img src=\"/images/entasis/entasis_dividend.gif\" alt=\"배당금\"></p>\n<ul>\n<li>토큰 별로 totalSupply 대비 투자자가 보유하고 있는 토큰양에 따라 배당금이 지불한다.</li>\n</ul>\n</li>\n</ul>\n<p>[배당금 지급 전 거래내역]\n<img src=\"/images/entasis/entasis_trade.gif\" alt=\"거래 내역\"></p>\n<p>[배당금 지급 후 거래내역]\n<img src=\"/images/entasis/entasis_after_trade.png\" alt=\"거래 후 내역\"></p>\n<p>웹사이트 상단 로고 아래에 있는 배당금 지급 시간이 모두 지나면 자동으로 배당금이 지급되며, 그 내역이 History에 표시된다.</p>\n<ul>\n<li><strong>거래제한(Circuit Breaker)</strong></li>\n</ul>\n<p><img src=\"/images/entasis/entasis_circuit_breaker.png\" alt=\"서킷 브레이커\"></p>\n<ul>\n<li>\n<p>극단적인 가격 변동률이 발생할 경우 모든 토큰에 거래를 제한한다.</p>\n</li>\n<li>\n<p>1분간 거래가 불가능해지며 이에 따라 토큰 가격도 1분간 정지된다.</p>\n</li>\n<li>\n<p>본 프로젝트에서는 극단적인 가격 변동이 일어날 일이 없는 점으로 인해\n거래 제한 기능을 보여주기 위하여 Circuit Breaker 버튼을 누를 경우 거래 제한이 발동하도록 구현한다.\n[거래 제한 발동]\n<img src=\"/images/entasis/entasis_circuit.gif\" alt=\"서킷 브레이커 발동\"></p>\n<p>[거래 제한 해제]\n<img src=\"/images/entasis/entasis_circuit_end.gif\" alt=\"서킷 브레이커 해제\"></p>\n</li>\n<li>\n<p><strong>스테이킹 기능(Staking)</strong>\n<img src=\"/images/entasis/entasis_staking.png\" alt=\"스테이킹\"></p>\n<ul>\n<li>스테이킹은 본인이 보유하고 있는 디지털자산을 블록체인 네트워크에 맡기는 방식으로 현금을 은행에 맡기는 예금과 구조가 유사하다.</li>\n<li>보유한 디지털 자산을 블록체인 검증에 활용하도록 맡기는 것을 뜻한다.</li>\n<li>스테이킹을 할 경우 일정기간동안 토큰을 거래소에 맡기고 기간이 만료되면 상대적으로 높은 이율에 따른 보상과 함께 토큰을 돌려받게 된다.</li>\n<li>단, 스테이킹 기간동안에는 해당 토큰을 사용할 수 없기 때문에, 토큰 가격이 변동으로 인해 토큰을 돌려 받고 싶어도 해당 기간동안에는 돌려 받을 수 없다.\n[스테이킹 요청시]\n<img src=\"/images/entasis/entasis_staking_1.png\" alt=\"스테이킹 화면 1\"></li>\n<li>사용자는 Staking 버튼을 눌러 메타마스크를 통해 서명한 데이터를 원하는 ST 컨트랙트에 보내 스테이킹을 진행한다.</li>\n<li>이 때, 이미 스테이킹이 되어있거나 기입한 Amount(수량)보다 토큰 보유량이 적을 시 에러를 반환한다.</li>\n<li>토큰이 문제없이 스테이킹이 된다면 우측 Amount List와 Reward List가 갱신되고 하단 Reward Time에 보상 인출까지 남은 기간이 표시한다.\n[보상 인출시]\n<img src=\"/images/entasis/entasis_staking_2.png\" alt=\"스테이킹 화면 2\"></li>\n<li>Reward Time이 Able로 변경되어 보상 인출이 가능해지면, 사용자는 Reward 버튼을 눌러 보상 인출 함수를 실행하는 데이터를 메타마스크로 서명해 컨트랙트에 보낸다.</li>\n<li>컨트랙트에서 만료일을 확인한 후, 문제가 없다면 사용자에게 스테이킹한 Amount에 Reward를 합한 토큰을 사용자에게 전송한다.\n<ul>\n<li>만료일이 지나지 않았을 경우 Reward 버튼이 비활성화</li>\n</ul>\n</li>\n<li>토큰과 보상이 사용자에게 전송되면 다시 Amount List와 Reward List가 0으로 초기화한다.</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"heading-8\">[ A**bout Dev ]**</h1>\n<h2 id=\"heading-9\"><strong>기술 스택</strong></h2>\n<p><img src=\"/images/entasis/entasis_tech_stack.png\" alt=\"기술 스택\"></p>\n<h2 id=\"heading-10\">와이어프레임</h2>\n<p><a href=\"https://www.figma.com/embed?embed_host=notion&amp;url=https%3A%2F%2Fwww.figma.com%2Ffile%2FHP5FZix2FedecrcLWhUsb7%2FProject_Entasis%3Fnode-id%3D0%253A1%26t%3DL4XWojmyo6BCQvJK-1\">https://www.figma.com/embed?embed_host=notion&amp;url=https%3A%2F%2Fwww.figma.com%2Ffile%2FHP5FZix2FedecrcLWhUsb7%2FProject_Entasis%3Fnode-id%3D0%253A1%26t%3DL4XWojmyo6BCQvJK-1</a></p>\n<h2 id=\"heading-11\">플로우 차트</h2>\n<ul>\n<li><strong>Chart Data Flow</strong></li>\n</ul>\n<p><a href=\"https://www.figma.com/embed?embed_host=notion&amp;url=https%3A%2F%2Fwww.figma.com%2Ffile%2FjC6wwRAyBiQJ8Y0nB6iyiH%2FUntitled%3Fnode-id%3D0%253A1%26t%3DrlPZeEHfPYzyxIO4-1\">https://www.figma.com/embed?embed_host=notion&amp;url=https%3A%2F%2Fwww.figma.com%2Ffile%2FjC6wwRAyBiQJ8Y0nB6iyiH%2FUntitled%3Fnode-id%3D0%253A1%26t%3DrlPZeEHfPYzyxIO4-1</a></p>\n<h2 id=\"heading-12\">아키텍처</h2>\n<p><img src=\"/images/entasis/entasis_arch.png\" alt=\"아키텍처\"></p>\n<p>아키텍처의 경우 S3를 이용한 정적 호스트 페이지와 EC2를 이용한 서비스 서버, Database 클라우드 서버, 그리고 블록체인 네트워크 서버로 구성되어 있다.</p>\n<ul>\n<li>먼저 배포과정에서는 Github Actions 를 활용하여 CI/CD 파이프라인을 구성하여 Github에서 push가 발생할 때마다 배포중인 서비스에 반영되어 자동 배포가 실행된다.</li>\n<li>클라이언트는 AWS IAM를 통해 S3에 접근하여 배포하였으며, 블록체인 네트워크의 경우 AWS EC2의 인스턴스 내에서 가나슈 네트워크를 백그라운드로 실행하여 네트워크가 지속 가능하도록 설정하였다.</li>\n<li>서버 부분은 EC2를 이용하여 Docker와 Github Container Registry를 사용하여 EC2내에서 백그라운드로 자동서비스를 실행할 수 있도록 설계하였다.</li>\n</ul>\n<h2 id=\"heading-13\"><strong>데이터베이스 스키마 다이어그램</strong></h2>\n<p><img src=\"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/7a81b8d5-5578-4f17-9037-10eedb81a23a/Untitled.png\" alt=\"Untitled\"></p>\n<h2 id=\"heading-14\">API 문서</h2>\n<p><a href=\"https://www.notion.so/API-feb98146eeb4481193df2505f966b9c6?pvs=21\">API 문서</a></p>\n<h2 id=\"heading-15\">스마트 컨트랙트 및 토큰 이코노미 설계</h2>\n<p><a href=\"https://www.notion.so/ebe74ce3e9af4b7db5edf7ae39c7728e?pvs=21\">스마트 컨트랙트 설계</a></p>\n<h2 id=\"heading-16\">Feeling</h2>\n<p>4주간의 시간동안 변동성과 시장의 형태를 구현할 수 있어서 의미있는 시간이었다. 시장의 형태를 구현하여 팀원들이 각자 수익률을 공유하며 자산을 늘려가는 즐거움을 공유했던 것이 가장 기억에 남는다.</p>\n<p>NFT와 선물 옵션 등 파생상품 시장 또한 다루어 보고 싶었지만, 시간이 넉넉하지 않았던 것에 아쉬움이 남았다</p>\n<p>스스로 서비스를 구현할수 있다는 것을 알게 되었고. 그것을 위해 내게 필요한 기술이 무엇인지 또한 알 수 있었던 소중한 시간이었다.</p>\n<h2 id=\"heading-17\">Finding</h2>\n<ol>\n<li>최소 단위기간에 1인이 감당할 수 있는 작업량에 대해 명확한 기준이 없이 무리하게 기능을 추가하여 4주라는 시간 대비 과한 범위를 적용하였고 그 범위를 재설정하는 것에 적지 않은 시간이 소요되었다.</li>\n<li>차트 이외에 트렌젝션 데이터와 유저 수익률 및 트랜잭션 데이터를 검색엔진에 노출되기 어려운 CSR형태로 구현하였다.</li>\n<li>상태관리 라이브러리를 활용하지 못하여 실시간 가격(currentPrice)이 자식 컴포넌트로 깊게 내려가는 props drilling 현상이 발생했다.</li>\n<li>잘못된 접근을 알리는 404페이지를 구현하였으나, 지갑이 등록 되었을 경우에만 접근할 수 있는 페이지로 구분하지 못했다.</li>\n<li>서버와의 통신을 HTTP요청을 통해 구현하여 대규모 트래픽에 대비하지 못했다.</li>\n</ol>\n<h2 id=\"heading-18\">Future Action</h2>\n<ol>\n<li>프로젝트를 진행함에 따라 그 기간을 어떻게 설정해야 적절한지 알 수 있었고 그것을 측정하는 것 또한 프로젝트의 중요한 부분이라는 점을 알 수 있었다. 프로젝트 초기부터 CPM을 설정하여 진행상황 평가를 공유하며 작업 진도에 대한 합의를 하는 것이 필요하다는 것을 알 수 있었다.</li>\n<li>NEXTJS를 통해 SSR을 구현, SEO를 실현할 수 있는, 사용자들에게 노출될 수 있는 웹 서비스로 구현해야겠다.</li>\n<li>효율적인 컴포넌트 구조를 찾기 위해 Redux, Mobx, Recoil 등의 상태관리 라이브러리와 리액트의 컴포지션, 컨택스트, 포탈을 사용을 고려하여 데이터 흐름 최적화에 대한 고민을 해야겠다.</li>\n<li>지갑의 등록되었을 경우에만 볼 수 있는 버튼을 구현함으로 유저데이터를 안전하게 관리하는 접근 영역이 명료한 웹 서비스로 리팩토링해야겠다.</li>\n<li>데이터 처리에 대한 피드백 받은 내용을 토대로 실시간 데이터 연동 웹소켓을 적용해야겠다.</li>\n</ol>\n<h2 id=\"heading-19\"><strong>기술적 문제 해결</strong></h2>\n<ul>\n<li><strong>랜더링 최적화</strong>에 문제가 있었다. <strong>프로젝트 종료 3일 전</strong>에 거래 토큰 다양화 과정에서 실시간 차트 <strong>데이터 요청이 기하급수로 늘어나는 것</strong>을 보았다. <strong>웹은 시간이 갈수록 무거워졌고 DB의 용량이 무한히 커졌으며 체인 네트워크는 수 시간 만에 8G의 용량을 소진해 버렸다.</strong> 같은 내용을 랜더링 하지 않는 <strong>useMemo</strong>나 랜더링을 최소화하기 위해 상태를 전역으로 관리하는 <strong>Redux</strong> 사용을 고려 하였으나, 우선 기존의 작성되었던 모든 <strong>useEffect의 디펜던시</strong>를 확인 해 보았다. 차트 데이터, 실시간 데이터, 실시간 데이터들의 일정시간 경과 후 차트 배열에 축적 시키는 과정에서 useEffect의 디펜던시에 해당 <strong>요소 값</strong>이 전부 들어가 있었다. 즉 <strong>차트에 포함되는 함수와 배열이 변경될 때 마다 관련된 모든 컴포넌트에서 리랜더링이 일어났던 것</strong>이다. 해당 디펜던시에 난수 적용 <strong>단위 기간과 같은 간격으로 비동기 처리</strong>를 할 수 있도록 했더니 기하급수 리랜더링 문제는 해결되었다.</li>\n<li><strong>캔들 차트</strong>에서 <strong>스크롤 이벤트</strong>에 대한 이해 없이 작업을 진행하다 보니, 차트를 제외한 페이지와의 <strong>스크롤 값 충돌</strong> 문제와 <strong>마우스 포인터의 값</strong>을 구하는 작업에 어려움을 느꼈다. 입력되는 스크롤 값에 대해 차트 컴포넌트와 메인페이지와의 입력 값의 구분이 필요했고 <strong>스크롤을 제한하고 제한을 푸는 작업</strong>이 필요하다 생각했다. 해당 키워드로 검색해보니, <strong>document.body.style.overflow의 값을 unset과 hidden으로 독립</strong>시킬 수 있다는 것을 알게 되었고, 메인페이지에서 스크롤을 할 때마다 차트에 영향을 주는 문제를 해결했다.</li>\n<li><strong>SVG</strong>를 통해 차트의 가격 높이 값과 거래량 높이 값을 설정해 준 후 <strong>마우스 포인터의 위치에 비례한 값</strong>을 보여주는 것에서 어려움이 있었다. 분명 해당 가격의 소수점 둘째 자리까지 <strong>정확히</strong> 맞아 떨어지는 것을 확인했는데, 며칠 뒤에 그 값이 <strong>음수</strong>로 바뀌어 있었다. 당혹스러웠지만 다시 살펴 보았다. 차트의 위치 값은 위로 <strong>올라갈수록</strong> 커지지만 마우스의 위치 값은 <strong>아래로 내려올수록</strong> 커진다는 것에서 값이 반전되거나 음수를 출력하는 문제가 발생한 것이었다. <strong>방정식</strong>으로 정확한 값을 구할 수 있었으나 잘못된 식을 대입했었고 <strong>차트와 거래량 간의 값 차이</strong>를 생각하지 않고 동일한 요소 값을 설정 했던 것에서 문제가 발생했음을 깨닫고 <strong>캔들은 최댓값과 최솟값</strong>이 달라질 수 있지만 <strong>거래량은 최솟값이 0으로 고정</strong>인 것을 이해하여 오류를 해결했다.</li>\n</ul>\n<h3 id=\"heading-20\">프로젝트를 마치며</h3>\n<p>NEXTjs를 통해 SSR을 구현하여 SEO를 구현하기를 바란다.</p>\n<p>서버의 차트데이터 로직 구현 외 백엔드와 컨트랙트 부분에 역할을 맡지 못한 점 또한 추후 솔로 프로젝트로 구현해야겠다.</p>\n",
      "tocItems": [
        {
          "id": "heading-0",
          "text": "1.소개",
          "level": 2,
          "isMainTopic": true,
          "position": 0
        },
        {
          "id": "heading-1",
          "text": "윤수빈",
          "level": 3,
          "isMainTopic": false,
          "position": 50
        },
        {
          "id": "heading-2",
          "text": "2. 프로젝트 소개",
          "level": 2,
          "isMainTopic": true,
          "position": 100
        },
        {
          "id": "heading-3",
          "text": "3.기본 환경 조성",
          "level": 2,
          "isMainTopic": true,
          "position": 0
        },
        {
          "id": "heading-4",
          "text": "토큰 가격 형성 및 변동성",
          "level": 3,
          "isMainTopic": false,
          "position": 0
        },
        {
          "id": "heading-5",
          "text": "블록체인",
          "level": 3,
          "isMainTopic": false,
          "position": 0
        },
        {
          "id": "heading-6",
          "text": "4.프로젝트 기록",
          "level": 2,
          "isMainTopic": true,
          "position": 300
        },
        {
          "id": "heading-7",
          "text": "Fact",
          "level": 3,
          "isMainTopic": false,
          "position": 350
        },
        {
          "id": "heading-8",
          "text": "[ A**bout Dev ]**",
          "level": 1,
          "isMainTopic": true,
          "position": 400
        },
        {
          "id": "heading-9",
          "text": "기술 스택",
          "level": 2,
          "isMainTopic": true,
          "position": 450
        },
        {
          "id": "heading-10",
          "text": "와이어프레임",
          "level": 2,
          "isMainTopic": true,
          "position": 500
        },
        {
          "id": "heading-11",
          "text": "플로우 차트",
          "level": 2,
          "isMainTopic": true,
          "position": 0
        },
        {
          "id": "heading-12",
          "text": "아키텍처",
          "level": 2,
          "isMainTopic": true,
          "position": 0
        },
        {
          "id": "heading-13",
          "text": "데이터베이스 스키마 다이어그램",
          "level": 2,
          "isMainTopic": true,
          "position": 0
        },
        {
          "id": "heading-14",
          "text": "API 문서",
          "level": 2,
          "isMainTopic": true,
          "position": 0
        },
        {
          "id": "heading-15",
          "text": "스마트 컨트랙트 및 토큰 이코노미 설계",
          "level": 2,
          "isMainTopic": true,
          "position": 0
        },
        {
          "id": "heading-16",
          "text": "Feeling",
          "level": 2,
          "isMainTopic": true,
          "position": 0
        },
        {
          "id": "heading-17",
          "text": "Finding",
          "level": 2,
          "isMainTopic": true,
          "position": 0
        },
        {
          "id": "heading-18",
          "text": "Future Action",
          "level": 2,
          "isMainTopic": true,
          "position": 0
        },
        {
          "id": "heading-19",
          "text": "기술적 문제 해결",
          "level": 2,
          "isMainTopic": true,
          "position": 0
        },
        {
          "id": "heading-20",
          "text": "프로젝트를 마치며",
          "level": 3,
          "isMainTopic": false,
          "position": 0
        }
      ]
    },
    "en": {
      "title": "Entasis",
      "description": "Digital Asset Exchange Development",
      "content": "<h2 id=\"heading-0\">1. Introduction</h2>\n<ul>\n<li>Project Name: ENTASIS</li>\n<li>Github Link: <a href=\"https://github.com/codestates-beb/BEB-07-final-entasis\">GitHub - codestates-beb/BEB-07-final-entasis</a></li>\n<li>Blockchain Network Address: <a href=\"http://18.183.252.200:8545/\">http://18.183.252.200:8545</a> Chain ID: 1337</li>\n</ul>\n<h3 id=\"heading-1\">Yoon Subin</h3>\n<ul>\n<li>Position: PM / Full Stack / Design</li>\n<li>Personal Github: <a href=\"https://github.com/Russ481-k\">https://github.com/Russ481-k</a></li>\n<li>Tech Stack: Figma / Javascript / React / HTML / CSS / MySQL / Sequelize / Node.js / Scale-Liner / Axios</li>\n<li>Implemented Features:\n<ul>\n<li>Project Planning &amp; Management</li>\n<li>Design Conceptualization and Implementation</li>\n<li>Frontend UI/UX Implementation</li>\n<li>Chart Implementation</li>\n<li>Data Requests through Server APIs</li>\n<li>Real-time Data Generation Implementation</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"heading-2\">2. Project Overview</h2>\n<p>[ STO Exchange \"ENTASIS\" ]\n<img src=\"/images/entasis/entasis_trade.gif\" alt=\"Trading\"></p>\n<p>The goal of this project is to help investors understand what STOs are, what features they have, and how to invest in them, thereby expanding investment in security tokens.</p>\n<p><a href=\"https://www.youtube.com/watch?v=0fmODCTVs0g\">Larry Fink Interview</a></p>\n<p>In an interview on December 1, 2022, BlackRock CEO Larry Fink stated that through STOs, broker fees included in current securities trading costs would be distributed to trading parties, lowering fees, and ST holders would be able to vote.</p>\n<p>Larry Fink's perspective on STOs helped inform our project topic selection.</p>\n<p><a href=\"https://www.youtube.com/watch?v=PSVpth7uqb4&amp;t=650s\">STO Explanation Video</a></p>\n<p>The tokens we commonly know are 'utility tokens' based on ICOs.</p>\n<p>So what is an STO?</p>\n<p><img src=\"/images/entasis/entasis_sto.png\" alt=\"STO Explanation\"></p>\n<p>First, we need to understand what \"Security Tokens\" are, which form the basis of STOs.</p>\n<p>Security tokens (ST) are securities issued by companies in cryptocurrency form instead of stocks or bonds. These security tokens represent legal ownership in the company, rather than just rights to use services provided by the blockchain platform.</p>\n<p>Therefore, holding security tokens allows you to receive dividends from the company's profits or blockchain platform assets.</p>\n<p>Since security tokens serve the same purpose as securities like stocks and bonds, they must be subject to legal and policy regulation. They must be issued according to relevant laws, just as stocks are issued according to commercial law procedures.</p>\n<p>STO refers to listing these security tokens for trading, similar to an IPO.</p>\n<p><img src=\"/images/entasis/entasis_sto2.png\" alt=\"STO Explanation 2\"></p>\n<p>[ About Service ]\nEntasis is an \"STO Exchange Tutorial\" that helps individual investors better understand and approach security tokens by allowing them to invest in actual STs, with some features of real STO exchanges scaled down.</p>\n<h2 id=\"heading-3\">3. Basic Environment Setup</h2>\n<h3 id=\"heading-4\">Token Price Formation and Volatility</h3>\n<p>While prices are typically formed through Market Maker &amp; Market Taker trading in real exchanges, we implemented price formation through random numbers due to the tutorial nature of this project and limited expected traffic.</p>\n<p>We created three ST markets with short-term volatility, medium-long term volatility, and company quarterly profit announcements set by random numbers. Dividends are distributed according to shareholding ratio by applying dividend rates to quarterly profits.\nToken holders can vote according to their shareholding ratio.</p>\n<h3 id=\"heading-5\">Blockchain</h3>\n<p>Ethereum: We ran the Ganache network in the background on an EC2 instance and deployed contracts using Truffle.\nWe fundamentally used ERC20 for token trading functionality and extracted operator/controller variables and trading restriction functions from ERC1400 to add some security token features.\nWe deployed three contracts diversifying into three companies, as investors need to analyze and trade various tokens. When token trades occur, holder arrays store token ownership to verify dividend distribution eligibility.\nAll staking features were implemented within the contract to enforce trading restrictions during staking, using block.timestamp to verify expiration.</p>\n<h2 id=\"heading-6\">4. Project Documentation</h2>\n<p>I want to document Project Entasis using the 4F method.</p>\n<ul>\n<li>Fact: Document what issues were considered through the project and how concepts were understood and problems solved</li>\n<li>Feeling: Honestly record emotions felt during project progress</li>\n<li>Finding: Record what was learned while solving problems and areas needing improvement in attempted solutions</li>\n<li>Future Action: Record learning methods to apply in the next project, items needing more consideration, communication methods, etc.</li>\n</ul>\n<h3 id=\"heading-7\">Fact</h3>\n<p>Key Features</p>\n<ul>\n<li><strong>Main page centered on real-time price movement charts updating every second</strong>\n<ul>\n<li>Charts can be adjusted to view candles in 1min, 15min, 1hr, 4hr, 1day, 1week units</li>\n<li>When chart is focused, scroll value adjusts chart range rather than page height by setting candle width values</li>\n<li>When chart is focused, crosshair coordinates are displayed with point values shown at corresponding heights for price and volume areas</li>\n</ul>\n</li>\n<li><strong>Wallet Registration via MetaMask</strong></li>\n</ul>\n<p><img src=\"/images/entasis/entasis_metamask.png\" alt=\"MetaMask Integration\"></p>\n<ul>\n<li>\n<p>Aiming for WEB3.0, user state is managed primarily through wallets</p>\n</li>\n<li>\n<p>No separate signup needed; automatic login with MetaMask wallet registration</p>\n</li>\n<li>\n<p>Redirects to MetaMask installation link if not installed</p>\n</li>\n<li>\n<p>Registers new MetaMask wallets in DB on first login</p>\n</li>\n<li>\n<p><strong>Tutorial and Usage Instructions</strong>\n<img src=\"/images/entasis/entasis_tutorial.gif\" alt=\"Tutorial\"></p>\n<ul>\n<li>Uses CSS transitions to move modals while conveying overall service usage to users</li>\n<li>Implemented as modal process tutorial rather than forcing actual trading experience due to concerns about mandating profit/loss experiences</li>\n</ul>\n</li>\n<li>\n<p><strong>FAUCET: Initial Capital of 50ETH</strong></p>\n</li>\n</ul>\n<p><img src=\"/images/entasis/entasis_tutorial.gif\" alt=\"Tutorial Process\"></p>\n<p><img src=\"/images/entasis/entasis_faucet.png\" alt=\"Faucet\"></p>\n<ul>\n<li>\n<p>Automatically grants 50ETH through faucet feature upon tutorial completion</p>\n</li>\n<li>\n<p>Faucet limited to one-time use</p>\n</li>\n<li>\n<p><strong>Security Token Purchase and Sale using ETH</strong></p>\n</li>\n</ul>\n<p><img src=\"/images/entasis/entasis_sign.png\" alt=\"Trading Fees\"></p>\n<ul>\n<li>Users can buy and sell tokens based on real-time price changes</li>\n<li>Investors sign transactions through MetaMask for token trading</li>\n</ul>\n<p><img src=\"/images/entasis/entasis_fee.png\" alt=\"Trading Fees\"></p>\n<ul>\n<li>\n<p>Trading fee automatically calculated at 0.04% of transaction amount</p>\n</li>\n<li>\n<p><strong>Dividend Voting</strong></p>\n</li>\n</ul>\n<p><img src=\"/images/entasis/entasis_vote.gif\" alt=\"Voting\"></p>\n<ul>\n<li>\n<p>Dividend rate voting conducted to determine rate for dividends paid every 10 minutes</p>\n</li>\n<li>\n<p>Dividends received even without voting</p>\n</li>\n<li>\n<p><strong>Dividend Distribution</strong>\n<img src=\"/images/entasis/entasis_dividend.gif\" alt=\"Dividends\"></p>\n<ul>\n<li>Dividends paid according to investor's token holdings relative to totalSupply per token</li>\n</ul>\n</li>\n</ul>\n<p>[Transaction History Before Dividend Payment]\n<img src=\"/images/entasis/entasis_trade.gif\" alt=\"Trade History\"></p>\n<p>[Transaction History After Dividend Payment]\n<img src=\"/images/entasis/entasis_after_trade.png\" alt=\"Post-Trade History\"></p>\n<p>When dividend payment time shown below website logo passes, dividends are automatically paid and recorded in History.</p>\n<ul>\n<li><strong>Trading Restrictions (Circuit Breaker)</strong></li>\n</ul>\n<p><img src=\"/images/entasis/entasis_circuit_breaker.png\" alt=\"Circuit Breaker\"></p>\n<ul>\n<li>Restricts trading on all tokens in case of extreme price volatility</li>\n<li>Trading disabled for 1 minute with token prices frozen</li>\n<li>Due to unlikely extreme price movements in this project, circuit breaker activates via button press to demonstrate trading restriction functionality</li>\n</ul>\n<p>[Circuit Breaker Activation]\n<img src=\"/images/entasis/entasis_circuit.gif\" alt=\"Circuit Breaker Activation\"></p>\n<p>[Circuit Breaker Deactivation]\n<img src=\"/images/entasis/entasis_circuit_end.gif\" alt=\"Circuit Breaker Deactivation\"></p>\n<ul>\n<li><strong>Staking Feature</strong>\n<img src=\"/images/entasis/entasis_staking.png\" alt=\"Staking\">\n<ul>\n<li>Staking involves depositing digital assets to blockchain network, similar to bank deposits</li>\n<li>Means lending held digital assets for blockchain validation</li>\n<li>When staking, tokens are deposited for a period and returned with relatively high interest rewards upon maturity</li>\n<li>However, tokens cannot be used during staking period - even if price changes make you want tokens back, they cannot be withdrawn during this period</li>\n</ul>\n</li>\n</ul>\n<p>[When Requesting Staking]\n<img src=\"/images/entasis/entasis_staking_1.png\" alt=\"Staking Screen 1\"></p>\n<ul>\n<li>Users click Staking button to send MetaMask-signed data to desired ST contract</li>\n<li>Returns error if already staking or token balance less than entered Amount</li>\n<li>Upon successful staking, Amount List and Reward List update with remaining reward time shown</li>\n</ul>\n<p>[When Withdrawing Rewards]\n<img src=\"/images/entasis/entasis_staking_2.png\" alt=\"Staking Screen 2\"></p>\n<ul>\n<li>When Reward Time changes to \"Able\", users can click Reward button to send MetaMask-signed reward withdrawal function data</li>\n<li>Contract verifies maturity date and sends staked Amount plus Reward if valid\n<ul>\n<li>Reward button disabled if not matured</li>\n</ul>\n</li>\n<li>Amount List and Reward List reset to 0 after token and reward transfer</li>\n</ul>\n<h1 id=\"heading-8\">[About Dev]</h1>\n<h2 id=\"heading-9\">Tech Stack</h2>\n<p><img src=\"/images/entasis/entasis_tech_stack.png\" alt=\"Tech Stack\"></p>\n<h2 id=\"heading-10\">Wireframe</h2>\n<p><a href=\"https://www.figma.com/embed?embed_host=notion&amp;url=https%3A%2F%2Fwww.figma.com%2Ffile%2FHP5FZix2FedecrcLWhUsb7%2FProject_Entasis%3Fnode-id%3D0%253A1%26t%3DL4XWojmyo6BCQvJK-1\">https://www.figma.com/embed?embed_host=notion&amp;url=https%3A%2F%2Fwww.figma.com%2Ffile%2FHP5FZix2FedecrcLWhUsb7%2FProject_Entasis%3Fnode-id%3D0%253A1%26t%3DL4XWojmyo6BCQvJK-1</a></p>\n<h2 id=\"heading-11\">Flowchart</h2>\n<ul>\n<li><strong>Chart Data Flow</strong></li>\n</ul>\n<p><a href=\"https://www.figma.com/embed?embed_host=notion&amp;url=https%3A%2F%2Fwww.figma.com%2Ffile%2FjC6wwRAyBiQJ8Y0nB6iyiH%2FUntitled%3Fnode-id%3D0%253A1%26t%3DrlPZeEHfPYzyxIO4-1\">https://www.figma.com/embed?embed_host=notion&amp;url=https%3A%2F%2Fwww.figma.com%2Ffile%2FjC6wwRAyBiQJ8Y0nB6iyiH%2FUntitled%3Fnode-id%3D0%253A1%26t%3DrlPZeEHfPYzyxIO4-1</a></p>\n<h2 id=\"heading-12\">Architecture</h2>\n<p><img src=\"/images/entasis/entasis_arch.png\" alt=\"Architecture\"></p>\n<p>The architecture consists of static host pages using S3, service server using EC2, cloud database server, and blockchain network server.</p>\n<ul>\n<li>CI/CD pipeline configured using Github Actions for automatic deployment on Github pushes</li>\n<li>Client deployed through AWS IAM S3 access, blockchain network runs Ganache in background on AWS EC2</li>\n<li>Server designed for automatic background service using Docker and Github Container Registry on EC2</li>\n</ul>\n<h2 id=\"heading-13\">Database Schema Diagram</h2>\n<p><img src=\"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/7a81b8d5-5578-4f17-9037-10eedb81a23a/Untitled.png\" alt=\"Untitled\"></p>\n<h2 id=\"heading-14\">API Documentation</h2>\n<p><a href=\"https://www.notion.so/API-feb98146eeb4481193df2505f966b9c6?pvs=21\">API Documentation</a></p>\n<h2 id=\"heading-15\">Smart Contract and Token Economy Design</h2>\n<p><a href=\"https://www.notion.so/ebe74ce3e9af4b7db5edf7ae39c7728e?pvs=21\">Smart Contract Design</a></p>\n<h2 id=\"heading-16\">Feeling</h2>\n<p>The 4-week period was meaningful in implementing volatility and market forms. Most memorable was sharing the joy of growing assets as team members shared their returns.</p>\n<p>While we wanted to cover NFTs and derivatives like futures/options, time constraints left us wanting more.</p>\n<p>It was valuable time learning we could implement services ourselves and identifying needed technologies.</p>\n<h2 id=\"heading-17\">Finding</h2>\n<ol>\n<li>Without clear criteria for manageable workload per minimum time unit, we over-ambitiously added features requiring significant time to rescope relative to 4 weeks</li>\n<li>Implemented transaction data, user returns and transaction data in CSR form difficult for search engines to index beyond charts</li>\n<li>Without clear criteria for manageable workload per minimum time unit, we over-ambitiously added features requiring significant time to rescope relative to 4 weeks</li>\n<li>Chart data and transaction data and user returns data are implemented in CSR form difficult for search engines to index beyond charts</li>\n<li>We did not use state management libraries and experienced props drilling phenomenon where real-time price (currentPrice) goes deeply into child components</li>\n<li>We implemented a 404 page to indicate incorrect access, but failed to separate pages that can only be accessed if a wallet is registered</li>\n<li>We implemented server communication through HTTP requests and did not handle large-scale traffic</li>\n</ol>\n<h2 id=\"heading-18\">Future Action</h2>\n<ol>\n<li>As we progressed, we learned how to set the project duration appropriately and how to measure it, which is an important part of the project. It was valuable to set CPM from the beginning of the project and share progress evaluations to reach an agreement on the project's progress.</li>\n<li>We need to implement SSR through NEXTJS to achieve SEO and create a web service that can be exposed to users.</li>\n<li>To find an efficient component structure, we need to consider using state management libraries like Redux, Mobx, Recoil and React's composition, context, and portal to optimize data flow.</li>\n<li>We need to refactor the web service to be a secure web service that can only be accessed if a wallet is registered by implementing a button that can only be viewed if a wallet is registered.</li>\n<li>We need to apply a real-time data-linked web socket based on feedback on data processing.</li>\n</ol>\n<h2 id=\"heading-19\"><strong>Technical Problem Solving</strong></h2>\n<ul>\n<li>\n<p>There was an issue with <strong>rendering optimization</strong>. <strong>3 days before project completion</strong>, we observed <strong>exponential growth in data requests</strong> for real-time charts during token diversification. <strong>The web became increasingly heavy over time, DB capacity grew infinitely, and the chain network consumed 8G of capacity within hours.</strong> We considered using <strong>useMemo</strong> to avoid rendering the same content or <strong>Redux</strong> for global state management to minimize rendering, but first checked all <strong>useEffect dependencies</strong> in existing code. Chart data, real-time data, and the process of accumulating real-time data into chart arrays after a certain time period had all their <strong>element values</strong> in useEffect dependencies. In other words, <strong>re-rendering occurred in all related components whenever functions and arrays included in charts changed</strong>. The exponential re-rendering issue was resolved by applying <strong>asynchronous processing at intervals matching random number generation periods</strong> to those dependencies.</p>\n</li>\n<li>\n<p>Working on the <strong>candlestick chart</strong> without understanding <strong>scroll events</strong> led to difficulties with <strong>scroll value conflicts</strong> between the chart and other pages, and obtaining <strong>mouse pointer values</strong>. We needed to distinguish between input values for the chart component and main page, and thought we needed to work on <strong>restricting and unrestricting scrolling</strong>. Searching these keywords, we learned we could <strong>isolate document.body.style.overflow values between unset and hidden</strong>, resolving the issue of main page scrolling affecting the chart.</p>\n</li>\n<li>\n<p>After setting price height and volume height values through <strong>SVG</strong>, we faced challenges showing values <strong>proportional to mouse pointer position</strong>. While we confirmed values matched precisely to two decimal places, days later those values had become <strong>negative</strong>. Upon review, we realized chart position values <strong>increase upward</strong> while mouse position values <strong>increase downward</strong>, causing value inversion and negative output issues. While we could find exact values using <strong>equations</strong>, we had applied incorrect formulas and set identical element values without considering <strong>differences between chart and volume values</strong>. We resolved the error by understanding that while <strong>candles can have different max and min values</strong>, <strong>volume has a fixed minimum of 0</strong>.</p>\n</li>\n</ul>\n<h3 id=\"heading-20\">At the end of the project</h3>\n<p>I hope to implement SSR through NEXTjs to achieve SEO.</p>\n<p>In addition to implementing the chart data logic on the server, I also failed to take on the role of the backend and contract parts in the future solo project.</p>\n",
      "tocItems": [
        {
          "id": "heading-0",
          "text": "1. Introduction",
          "level": 2,
          "isMainTopic": true,
          "position": 0
        },
        {
          "id": "heading-1",
          "text": "Yoon Subin",
          "level": 3,
          "isMainTopic": false,
          "position": 50
        },
        {
          "id": "heading-2",
          "text": "2. Project Overview",
          "level": 2,
          "isMainTopic": true,
          "position": 100
        },
        {
          "id": "heading-3",
          "text": "3. Basic Environment Setup",
          "level": 2,
          "isMainTopic": true,
          "position": 0
        },
        {
          "id": "heading-4",
          "text": "Token Price Formation and Volatility",
          "level": 3,
          "isMainTopic": false,
          "position": 0
        },
        {
          "id": "heading-5",
          "text": "Blockchain",
          "level": 3,
          "isMainTopic": false,
          "position": 0
        },
        {
          "id": "heading-6",
          "text": "4. Project Documentation",
          "level": 2,
          "isMainTopic": true,
          "position": 300
        },
        {
          "id": "heading-7",
          "text": "Fact",
          "level": 3,
          "isMainTopic": false,
          "position": 350
        },
        {
          "id": "heading-8",
          "text": "[About Dev]",
          "level": 1,
          "isMainTopic": true,
          "position": 400
        },
        {
          "id": "heading-9",
          "text": "Tech Stack",
          "level": 2,
          "isMainTopic": true,
          "position": 450
        },
        {
          "id": "heading-10",
          "text": "Wireframe",
          "level": 2,
          "isMainTopic": true,
          "position": 500
        },
        {
          "id": "heading-11",
          "text": "Flowchart",
          "level": 2,
          "isMainTopic": true,
          "position": 0
        },
        {
          "id": "heading-12",
          "text": "Architecture",
          "level": 2,
          "isMainTopic": true,
          "position": 0
        },
        {
          "id": "heading-13",
          "text": "Database Schema Diagram",
          "level": 2,
          "isMainTopic": true,
          "position": 0
        },
        {
          "id": "heading-14",
          "text": "API Documentation",
          "level": 2,
          "isMainTopic": true,
          "position": 0
        },
        {
          "id": "heading-15",
          "text": "Smart Contract and Token Economy Design",
          "level": 2,
          "isMainTopic": true,
          "position": 0
        },
        {
          "id": "heading-16",
          "text": "Feeling",
          "level": 2,
          "isMainTopic": true,
          "position": 0
        },
        {
          "id": "heading-17",
          "text": "Finding",
          "level": 2,
          "isMainTopic": true,
          "position": 0
        },
        {
          "id": "heading-18",
          "text": "Future Action",
          "level": 2,
          "isMainTopic": true,
          "position": 0
        },
        {
          "id": "heading-19",
          "text": "Technical Problem Solving",
          "level": 2,
          "isMainTopic": true,
          "position": 0
        },
        {
          "id": "heading-20",
          "text": "At the end of the project",
          "level": 3,
          "isMainTopic": false,
          "position": 0
        }
      ]
    }
  },
  "imageHeights": {
    "img-3": 400,
    "img-4": 400,
    "img-5": 400,
    "img-11": 400,
    "img-12": 400,
    "img-13": 400,
    "img-14": 400,
    "img-15": 400,
    "img-16": 400,
    "img-17": 400,
    "img-18": 400,
    "img-19": 400,
    "img-20": 400,
    "img-21": 400,
    "img-22": 400,
    "img-23": 400,
    "img-24": 400,
    "img-25": 400,
    "img-26": 400,
    "img-29": 400,
    "img-33": 400,
    "img-35": 400
  }
}